services:
  mysql:
    image: mysql:8.0
    container_name: mysql_container
    restart: always
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "mysql", "-u$MYSQL_USER", "-p$MYSQL_PASSWORD"]
      interval: 10s
      retries: 5
      timeout: 5s
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: "8GB"

  redis:
    image: redis:latest
    container_name: redis_container
    restart: always
    env_file:
      - .env
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    command: ["redis-server", "--bind", "0.0.0.0", "--requirepass", "$REDIS_PASSWORD"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      timeout: 5s
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "2GB"

  nginx:
    image: nginx:latest
    container_name: nginx_container
    restart: always
    ports:
      - "80:80"    # HTTP 포트
      - "443:443"  # HTTPS 포트
    volumes:
      - /home/ec2-user/yeoboya-lunch/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /home/ec2-user/yeoboya-lunch/certbot/www:/var/www/certbot
      - /home/ec2-user/yeoboya-lunch/certbot/conf:/etc/letsencrypt
    networks:
      - app_network
    depends_on:
      - app

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: >
      /bin/sh -c "certbot certonly --webroot -w /var/www/certbot
      --email khjzzm@gmail.com --agree-tos --no-eff-email
      --force-renewal --non-interactive
      -d yeoboya-lunch.com -d api.yeoboya-lunch.com &&
      nginx -s reload"

  app:
    image: khjzzm/yeoboya-lunch-api:latest
    container_name: spring_boot_container
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app_network
    ports: []
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: "4GB"

networks:
  app_network:

volumes:
  mysql_data:
  redis_data:
