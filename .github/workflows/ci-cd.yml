name: 🚀 EC2 자동 배포

on:
  push:
    branches:
      - main  # `main` 브랜치에 푸시 시 실행

jobs:
  deploy:
    name: "🚀 배포 작업"
    runs-on: ubuntu-latest  # GitHub Actions가 실행될 환경

    steps:
      - name: 🔄 코드 가져오기
        uses: actions/checkout@v3

      - name: 🔑 EC2 SSH 접속 테스트
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "✅ SSH 연결 성공!"

      - name: 🔑 SSH 키 설정
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/yeoboya-lunch-ec2-key.pem
          chmod 600 ~/.ssh/yeoboya-lunch-ec2-key.pem
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: 🔐 Docker Hub 로그인
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🏗️ Docker 이미지 빌드
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/yeoboya-lunch-api:latest .

      - name: 📤 Docker Hub에 Push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/yeoboya-lunch-api:latest

      - name: 🚀 EC2에 배포
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker stop yeoboya-lunch-api || true
            docker rm yeoboya-lunch-api || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/yeoboya-lunch-api:latest
            docker run -d --name yeoboya-lunch-api -p 8080:8080 \
              --env-file /home/ec2-user/yeoboya-lunch/.env \
              --network app_network \
              ${{ secrets.DOCKER_USERNAME }}/yeoboya-lunch-api:latest
